@using Kidemy.Application.ViewModels.WithrawRequest
@using Kidemy.Domain.Models.WithdrawRequest

@model FilterWithdrawRequestViewModel
@functions {
    string GetStatusColor(WithdrawRequestStatus status)
    {
        return (status) switch
        {
            WithdrawRequestStatus.Accepeted => "success",
            WithdrawRequestStatus.Pending => "secondary",
            WithdrawRequestStatus.Rejected => "danger",
        };
    }
}
<div class="card h-100">
    <div class="card-header d-inline-flex">
        <h5>@Localizer["PendingWithdrawRequests"]</h5>

        <a href="/admin/withdrawrequest/list" class="ms-auto">
            @Localizer["All"]
        </a>

    </div>
    @if (Model != null && Model.Entities != null && Model.Entities.Any())
    {
        <div class="table-responsive mb-4 text-nowrap text-center">
            <table class="table">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>@Localizer["UserName"]</th>
                        <th>@Localizer["Amount"]</th>
                        <th>@Localizer["Status"]</th>
                        <th>@Localizer["DestinationBankAccountCard"]</th>
                        <th>@Localizer["Operation"]</th>
                    </tr>
                </thead>
                <tbody class="table-border-bottom-0">
                    @foreach (var item in Model.Entities)
                    {
                        <tr>
                            <td>@Model.Counter</td>
                            <td class="text-break-cst word-break-custome">
                                <a class="text-primary" asp-action="Profile" asp-controller="User" asp-area="Admin" asp-route-id="@item.UserId">@item.UserName</a>
                            </td>
                            <td class="text-break-cst">
                                @item.Amount?.ToString("#,0") @Localizer["Toman"]
                            </td>
                            <td>
                                <span class="badge bg-label-@(GetStatusColor(item.Status))">@item.Status.GetEnumName()</span>
                            </td>
                            <td>
                                <a class="text-primary" href="javascript:void(0)" onclick="showBankAccountCard(@item.DestinationBankAccountCardId)">@Localizer["Show"]</a>
                            </td>
                            <td>
                                @if (item.Status == WithdrawRequestStatus.Pending)
                                {
                                    <a class="btn btn-success btn-sm" href="javascript:void(0)" onclick="acceptWithdrawRequest(@item.Id)">
                                        @Localizer["Accept"]
                                    </a>
                                    <a class="btn btn-danger btn-sm" href="javascript:void(0)" onclick="rejectWithdrawRequest(@item.Id)">
                                        @Localizer["DoReject"]
                                    </a>
                                }
                            </td>
                        </tr>

                        Model.Counter++;
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="mx-3">
            <partial name="_NotFoundPartial" />

        </div>
    }
</div>