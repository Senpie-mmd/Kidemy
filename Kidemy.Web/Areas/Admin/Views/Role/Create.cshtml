@using Kidemy.Application.ViewModels.Role;
@using Kidemy.Domain.Statics;
@model AdminSideUpsertRoleViewModel
@{
    ViewData["Title"] = Localizer["ViewTitle.Admin.CreateRole"];
}

@section FooterReferences
{
    <script asp-append-version="true" src="~/admin/js/permission.js"></script>
}

<form asp-area="Admin" asp-controller="Role" asp-action="Create" method="post" enctype="multipart/form-data">
    <div class="row">
        <div class="col-md-8">
            <div class="card p-lg-5">
                <div class="card-body">
                    <div class="row">
                        @await Component.InvokeAsync("Localized", Model)
                        <div class="col-12">
                            <div class="mb-4">
                                <label asp-for="UniqueName"></label>
                                <input type="text" asp-for="UniqueName" class="form-control " />
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12 d-flex justify-content-start">
                            <button type="submit" class="btn btn-success">@Localizer["Submit"]</button>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="text-danger" asp-validation-summary="All"></div>
                </div>
            </div>
        </div>
        <div class="col-md-4 col-sm-12">
            <div class="d-flex justify-content-between align-items-center">
                <span>@Localizer["Access"]</span>
                <div class="checkbox">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="SelectAll">
                        <label class="form-check-label" for="SelectAll">@Localizer["SelectAll"]</label>
                    </div>
                </div>
            </div>
            <div class="accordion mt-3" id="permissionAccordion">
                @foreach (var rootPermission in PermissionsList.Permissions.Where(p => p.ParentId == null))
                {
                    var isRootSelected = Model.PermissionsId?.Contains(rootPermission.Id) ?? false;
                    var hasChildren = PermissionsList.Permissions.Any(p => p.ParentId == rootPermission.Id);

                    <div class="card accordion-item">
                        <h2 class="accordion-header" id="heading-@rootPermission.Id">
                            <button type="button" class="accordion-button collapse" data-bs-toggle="collapse" data-bs-target="#collapse-@rootPermission.Id" aria-expanded="true" aria-controls="collapse-@rootPermission.Id">
                                @Localizer[rootPermission.UniqueName]
                            </button>
                        </h2>

                        <div id="collapse-@rootPermission.Id" class="accordion-collapse collapse m-3" aria-labelledby="heading-@rootPermission.Id" data-bs-parent="#permissionAccordion">
                            <div class="form-check">
                                <input class="form-check-input" id="PermissionsId-@rootPermission.Id" value="@rootPermission.Id" name="PermissionsId" data-id="@rootPermission.Id" type="checkbox" @((isRootSelected) ? "checked" : "")>
                                <label class="form-check-label" for="PermissionsId-@rootPermission.Id">@Localizer[rootPermission.UniqueName]</label>
                            </div>
                            @if (hasChildren)
                            {
                                <div class="accordion mt-3" id="subPermissionAccordion-@rootPermission.Id">
                                    @foreach (var subPermission in PermissionsList.Permissions.Where(p => p.ParentId == rootPermission.Id))
                                    {
                                        var isSubSelected = Model.PermissionsId?.Contains(subPermission.Id) ?? false;
                                        var hasGrandchildren = PermissionsList.Permissions.Any(p => p.ParentId == subPermission.Id);

                                        <div class="card accordion-item">
                                            <h2 class="accordion-header" id="heading-@subPermission.Id">
                                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@subPermission.Id" aria-expanded="false" aria-controls="collapse-@subPermission.Id">
                                                    @Localizer[subPermission.UniqueName]
                                                </button>
                                            </h2>

                                            <div id="collapse-@subPermission.Id" class="accordion-collapse collapse m-3" aria-labelledby="heading-@subPermission.Id" data-bs-parent="#subPermissionAccordion-@rootPermission.Id">
                                                <div class="form-check mt-3">
                                                    <input class="form-check-input" id="PermissionsId-@subPermission.Id" value="@subPermission.Id" name="PermissionsId" data-id="@subPermission.Id" data-parentId="@rootPermission.Id" type="checkbox" @((isSubSelected) ? "checked" : "")>
                                                    <label class="form-check-label" for="PermissionsId-@subPermission.Id">@Localizer[subPermission.UniqueName]</label>
                                                </div>
                                                @if (hasGrandchildren)
                                                {
                                                    <div class="accordion mt-3" id="grandPermissionAccordion-@subPermission.Id">
                                                        @foreach (var grandPermission in PermissionsList.Permissions.Where(p => p.ParentId == subPermission.Id))
                                                        {
                                                            var isGrandSelected = Model.PermissionsId?.Contains(grandPermission.Id) ?? false;

                                                            <div class="card">
                                                                <div class="form-check mx-3 my-2">
                                                                    <input class="form-check-input" id="PermissionsId-@grandPermission.Id" value="@grandPermission.Id" name="PermissionsId" data-id="@grandPermission.Id" data-parentId="@subPermission.Id" type="checkbox" @((isGrandSelected) ? "checked" : "")>
                                                                    <label class="form-check-label" for="PermissionsId-@grandPermission.Id">@Localizer[grandPermission.UniqueName]</label>
                                                                </div>
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</form>
